{"ast":null,"code":"var _jsxFileName = \"/Users/huminxuan/Desktop/weather-application/src/view/main.jsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Form from \"../component/form.component\";\nimport { Link } from \"react-router-dom\";\nimport Weather from \"../component/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // git project https://github.com/erikflowers/weather-icons\n\nimport \"weather-icons/css/weather-icons.css\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n      this.setState({\n        country: country\n      });\n      this.setState({\n        city: city\n      });\n\n      if (country && city) {\n        const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&APPID=5e77b5f6511456533228a4c91142bfc7\"));\n        const api_forecast = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&APPID=5e77b5f6511456533228a4c91142bfc7\"));\n        const response = await api_call.json();\n        const response_forecast = await api_forecast.json();\n        console.log(response);\n        console.log(response_forecast);\n        let forecast = [];\n\n        for (let i = 0, j = 0; i < response_forecast.list.length; i++) {\n          if (i % 8 === 0) {\n            let temp = [];\n\n            for (let a = 0; a < 8; a++) {\n              temp[a] = response_forecast.list[i + a].main.temp;\n            }\n\n            temp.sort();\n            console.log(temp);\n            forecast[j] = {\n              city: \"\".concat(response_forecast.city.name, \", \").concat(response_forecast.city.country),\n              country: response_forecast.city.country,\n              main: response_forecast.list[i].weather[0].main,\n              icon: this.get_WeatherIcon(this.weatherIcon, response_forecast.list[i].weather[0].id),\n              celsius: this.calCelsius(response_forecast.list[i].main.temp),\n              temp_max: this.calCelsius(temp[7]),\n              temp_min: this.calCelsius(temp[0]),\n              description: response_forecast.list[i].weather[0].description,\n              date: response_forecast.list[i].dt_txt.substring(0, 10)\n            };\n            j++;\n          }\n        }\n\n        forecast[0] = {\n          city: \"\".concat(response.name, \", \").concat(response.sys.country),\n          country: response.sys.country,\n          main: response.weather[0].main,\n          celsius: this.calCelsius(response.main.temp),\n          icon: this.get_WeatherIcon(this.weatherIcon, response.weather[0].id),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          date: response_forecast.list[0].dt_txt.substring(0, 10)\n        };\n        console.log(forecast);\n        this.setState({\n          weather: forecast\n        }); // seting icons\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      weather: [],\n      city: '',\n      country: '',\n      error: false\n    };\n    this.error = false;\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        return icons.Thunderstorm;\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        return icons.Drizzle;\n        break;\n\n      case rangeId >= 500 && rangeId <= 521:\n        return icons.Rain;\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        return icons.Snow;\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        return icons.Atmosphere;\n        break;\n\n      case rangeId === 800:\n        return icons.Clear;\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        return icons.Clouds;\n        break;\n\n      default:\n        return icons.Clouds;\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  toDetail(i, city, country, _) {\n    this.props.history.push('/weatherDetail?id=' + i + '&city=' + city + '&country=' + country);\n  }\n\n  render() {\n    let items = [];\n\n    for (let i = 0; i < this.state.weather.length; i++) {\n      items.push(React.createElement(\"div\", {\n        className: \"card\",\n        key: i,\n        onClick: this.toDetail.bind(this, i, this.state.city, this.state.country),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Weather, {\n        city: this.state.weather[i].city,\n        weatherIcon: this.state.weather[i].icon,\n        temp_celsius: this.state.weather[i].celsius,\n        temp_max: this.state.weather[i].temp_max,\n        temp_min: this.state.weather[i].temp_min,\n        description: this.state.weather[i].description,\n        date: this.state.weather[i].date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, items));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/huminxuan/Desktop/weather-application/src/view/main.jsx"],"names":["React","Form","Link","Weather","Main","Component","constructor","getWeather","e","preventDefault","country","target","elements","value","city","setState","api_call","fetch","api_forecast","response","json","response_forecast","console","log","forecast","i","j","list","length","temp","a","main","sort","name","weather","icon","get_WeatherIcon","weatherIcon","id","celsius","calCelsius","temp_max","temp_min","description","date","dt_txt","substring","sys","error","state","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","cell","Math","floor","toDetail","_","props","history","push","render","items","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport Form from \"../component/form.component\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Weather from \"../component/weather.component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// git project https://github.com/erikflowers/weather-icons\r\nimport \"weather-icons/css/weather-icons.css\";\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      weather:[],\r\n      city:'',\r\n      country:'',\r\n      error: false\r\n    };\r\n    this.error=false\r\n    this.weatherIcon = {\r\n      Thunderstorm: \"wi-thunderstorm\",\r\n      Drizzle: \"wi-sleet\",\r\n      Rain: \"wi-storm-showers\",\r\n      Snow: \"wi-snow\",\r\n      Atmosphere: \"wi-fog\",\r\n      Clear: \"wi-day-sunny\",\r\n      Clouds: \"wi-day-fog\"\r\n    };\r\n  }\r\n\r\n  get_WeatherIcon(icons, rangeId) {\r\n    switch (true) {\r\n      case rangeId >= 200 && rangeId < 232:\r\n        return icons.Thunderstorm\r\n        break;\r\n      case rangeId >= 300 && rangeId <= 321:\r\n        return icons.Drizzle\r\n        break;\r\n      case rangeId >= 500 && rangeId <= 521:\r\n        return icons.Rain\r\n        break;\r\n      case rangeId >= 600 && rangeId <= 622:\r\n        return icons.Snow\r\n        break;\r\n      case rangeId >= 701 && rangeId <= 781:\r\n        return icons.Atmosphere\r\n        break;\r\n      case rangeId === 800:\r\n        return icons.Clear\r\n        break;\r\n      case rangeId >= 801 && rangeId <= 804:\r\n        return icons.Clouds\r\n        break;\r\n      default:\r\n        return icons.Clouds\r\n    }\r\n  }\r\n\r\n  calCelsius(temp) {\r\n    let cell = Math.floor(temp - 273.15);\r\n    return cell;\r\n  }\r\n\r\n  toDetail(i,city,country,_){\r\n    this.props.history.push('/weatherDetail?id='+i+'&city='+city+'&country='+country)\r\n  }\r\n\r\n  getWeather = async e => {\r\n    e.preventDefault();\r\n\r\n    const country = e.target.elements.country.value;\r\n    const city = e.target.elements.city.value;\r\n    this.setState({country:country});\r\n    this.setState({city:city});\r\n    if (country && city) {\r\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=5e77b5f6511456533228a4c91142bfc7`);\r\n      const api_forecast = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&APPID=5e77b5f6511456533228a4c91142bfc7`);\r\n      const response = await api_call.json();\r\n      const response_forecast = await api_forecast.json();\r\n      console.log(response)\r\n      console.log(response_forecast)\r\n      let forecast=[]\r\n      for(let i=0,j=0;i<response_forecast.list.length;i++){\r\n        if((i%8)===0){\r\n          let temp=[]\r\n          for(let a=0;a<8;a++){\r\n            temp[a]=response_forecast.list[i+a].main.temp\r\n          }\r\n          temp.sort()\r\n          console.log(temp)\r\n          forecast[j]={\r\n            city: `${response_forecast.city.name}, ${response_forecast.city.country}`,\r\n            country: response_forecast.city.country,\r\n            main: response_forecast.list[i].weather[0].main,\r\n            icon:this.get_WeatherIcon(this.weatherIcon, response_forecast.list[i].weather[0].id),\r\n            celsius: this.calCelsius(response_forecast.list[i].main.temp),\r\n            temp_max: this.calCelsius(temp[7]) ,\r\n            temp_min: this.calCelsius(temp[0]),\r\n            description: response_forecast.list[i].weather[0].description,\r\n            date: response_forecast.list[i].dt_txt.substring(0,10)\r\n          }\r\n          j++\r\n        }\r\n      }\r\n      forecast[0]={\r\n        city: `${response.name}, ${response.sys.country}`,\r\n        country: response.sys.country,\r\n        main: response.weather[0].main,\r\n        celsius: this.calCelsius(response.main.temp),\r\n        icon:this.get_WeatherIcon(this.weatherIcon, response.weather[0].id),\r\n        temp_max: this.calCelsius(response.main.temp_max),\r\n        temp_min: this.calCelsius(response.main.temp_min),\r\n        description: response.weather[0].description,\r\n        date: response_forecast.list[0].dt_txt.substring(0,10)\r\n      }\r\n      console.log(forecast)\r\n      this.setState({weather:forecast});\r\n      // seting icons\r\n\r\n    } else {\r\n      this.setState({error:true});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let items = []\r\n    for(let i=0;i<this.state.weather.length;i++){\r\n      items.push(\r\n       <div className=\"card\" key={i} onClick={this.toDetail.bind(this,i,this.state.city,this.state.country)}>\r\n         <Weather\r\n           city={this.state.weather[i].city}\r\n           weatherIcon={this.state.weather[i].icon}\r\n           temp_celsius={this.state.weather[i].celsius}\r\n           temp_max={this.state.weather[i].temp_max}\r\n           temp_min={this.state.weather[i].temp_min}\r\n           description={this.state.weather[i].description}\r\n           date={this.state.weather[i].date}\r\n         />\r\n      </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Form loadweather={this.getWeather} error={this.state.error} />\r\n        <div className=\"card-group\">\r\n          {items}\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}